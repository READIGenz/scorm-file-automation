pipeline {
  agent {
	node {
		label 'VM01'
        }
    }

  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '15'))
  }
  
 /* parameters {
        string(name: 'env', defaultValue: 'load', description: 'In which env you want to test?')
    }*/
    
     parameters {
      //  choice(name: 'ENVIRONMENT', choices: ['load', 'load1','ci1','ci2'], description: 'Select Environment')
     //   choice(name: 'TestPlan', choices: ['REGTST-11942', 'REGTST-74','UATSCH-1'], description: 'Select test plan id')
          choice(name: 'CucumberTag', choices: ["@Test"], description: 'Select feature to test by selecting the tag Name. Eg: "@REGTST-74" for full regression.')
     //   string(name: 'RELEASE', defaultValue: 'SPRINT_13', description: 'Enter the Sprint Name or release tag. Eg:SPRINT_12 or REL_1.12.0')
    }
    
  stages{   
     stage('Export tests'){
    	steps{
    		catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
              	bat 'mvn -X clean install exec:java -Dexec.mainClass="com.lh.xray.ExportTests" -Dexec.classpathScope=test -e -DskipTests'
    		}
    	}
    } 
    stage('Run tests'){
    	steps{
    		catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
    		   // bat "Replace_variable.bat ${ENVIRONMENT} ${TestPlan}"
    			bat "test_on_jenkins.bat '${CucumberTag}'"
              	//bat "mvn install -Dtest=JunitRunner -Denv='${ENVIRONMENT}' -Dtestplan='${TestPlan}' -Dcucumber.options='${CucumberTag}'"
    		}
    	}
    } 
	stage('Publish reports'){
    	steps{
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
        	publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'Reports/genZ_', reportFiles: 'OverviewDetailedReport_genZ_-.html', reportName: 'Regression Pack Test Report', reportTitles: ''])}
        }
    }
	stage('Maven clean'){
    	steps{
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE'){
        	bat "mvn clean"}
            }
    	}
    }
}